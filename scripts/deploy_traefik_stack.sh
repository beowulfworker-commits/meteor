#!/usr/bin/env bash
set -euo pipefail

: "${GIT_REPO:?}"; : "${SSH_USER:?}"; : "${HOST_IP:?}"
: "${DOMAIN:?}"; : "${LETSENCRYPT_EMAIL:?}"

echo "üëâ –ü—Ä–æ–≤–µ—Ä—è—é DNS A-–∑–∞–ø–∏—Å—å –¥–æ–º–µ–Ω–∞"
dns_ip="$(getent ahostsv4 "$DOMAIN" | awk '{print $1; exit}')"
echo "DNS: $dns_ip | EXPECT: $HOST_IP"
[ "$dns_ip" = "$HOST_IP" ] || { echo "‚ùå $DOMAIN –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ $HOST_IP"; exit 1; }

echo "üëâ –ü—Ä–æ–≤–µ—Ä—è—é SSH-–¥–æ—Å—Ç—É–ø"
ssh -o BatchMode=yes -o StrictHostKeyChecking=accept-new "${SSH_USER}@${HOST_IP}" "id >/dev/null"

echo "üëâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker (–µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)"
ssh "${SSH_USER}@${HOST_IP}" 'set -e
if ! command -v docker >/dev/null 2>&1; then
  if command -v apt-get >/dev/null 2>&1; then
    export DEBIAN_FRONTEND=noninteractive
    apt-get update -y
    apt-get install -y ca-certificates curl gnupg lsb-release
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(. /etc/os-release; echo "$VERSION_CODENAME") stable" > /etc/apt/sources.list.d/docker.list
    apt-get update -y
    apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    systemctl enable --now docker || service docker start || true
  elif command -v dnf >/dev/null 2>&1; then
    dnf -y install dnf-plugins-core || true
    dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo || true
    dnf -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin
    systemctl enable --now docker || true
  elif command -v yum >/dev/null 2>&1; then
    yum -y install yum-utils
    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    yum -y install docker-ce docker-ce-cli containerd.io docker-compose-plugin
    systemctl enable --now docker || true
  else
    echo "Unsupported OS: install docker manually"; exit 1
  fi
fi
'

echo "üëâ –ö–ª–æ–Ω–∏—Ä—É—é/–æ–±–Ω–æ–≤–ª—è—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
ssh "${SSH_USER}@${HOST_IP}" "mkdir -p /opt/meteor && \
  if [ -d /opt/meteor/.git ]; then git -C /opt/meteor pull --ff-only; \
  else git clone --depth=1 '$GIT_REPO' /opt/meteor; fi"

echo "üëâ –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é –ø–∞–ø–∫–∏ –∏ .env –¥–ª—è Traefik"
ssh "${SSH_USER}@${HOST_IP}" "cd /opt/meteor/infra/traefik && \
  mkdir -p letsencrypt && \
  install -m 600 /dev/null letsencrypt/acme.json || true && \
  cp -n .env.example .env || true && \
  sed -i 's|^DOMAIN=.*|DOMAIN=${DOMAIN}|' .env && \
  sed -i 's|^LETSENCRYPT_EMAIL=.*|LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}|' .env"

echo "üëâ –°—Ç–∞—Ä—Ç—É—é –ø—Ä–æ–∫—Å–∏ –∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å"
ssh "${SSH_USER}@${HOST_IP}" "cd /opt/meteor/infra/traefik && \
  docker compose --env-file ./.env up -d"

echo "üëâ –ñ–¥—É –≤—ã–ø—É—Å–∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å HTTPS"
for i in {1..30}; do
  code="$(curl -skI --resolve "${DOMAIN}:443:${HOST_IP}" "https://${DOMAIN}/" | awk 'NR==1{print $2}')" || true
  [[ "$code" =~ ^2|3 ]] && { echo "‚úÖ HTTPS —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥ $code)"; exit 0; }
  echo "‚Ä¶ –æ–∂–∏–¥–∞–Ω–∏–µ (${i}/30)"; sleep 5
done
echo "‚ùå –ù–µ –¥–æ–∂–¥–∞–ª–∏—Å—å –≤–∞–ª–∏–¥–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ HTTPS"; exit 1
